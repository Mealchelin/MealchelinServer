<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
	
<mapper namespace="com.mealchelin.mvc.review.model.mapper.ReviewMapper">
	<sql id="reviewListSql">
		SELECT	REVIEW_NO,
				RATED,
				NAME,
				CONTENT,
				IMAGE,
				ORIGINAL_FILENAME,
				RENAMED_FILENAME,
				RGSTR_DATE,
				VIEWS,
				STATUS,
				USER_NO,
				PRD_NO
        FROM REVIEW
	</sql>

	<resultMap id="reviewListResultMap" type="Review">
		<id property="reviewNo" column="REVIEW_NO"/>
		<result property="rated" column="RATED"/>
		<result property="name" column="NAME"/>
		<result property="content" column="CONTENT"/>
		<result property="image" column="IMAGE"/>
		<result property="rgstrDate" column="RGSTR_DATE"/>
		<result property="views" column="VIEWS"/>
		<result property="rstatus" column="STATUS"/>
		<result property="userNo" column="USER_NO"/>
		<result property="prdNo" column="PRD_NO"/>
		<result property="id" column="ID"/>
		<result property="originalFilename" column="ORIGINAL_FILENAME"/>
		<result property="renamedFilename" column="RENAMED_FILENAME"/>
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="productimage" column="PRODUCT_IMAGE"/>
	</resultMap>
	
	<resultMap id="orderListResultMap" type="MemberProdutOrderList">
		<id property="memberNo" column="MEMBER_NO"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="productName" column="PRODUCT_NAME"/>
		<result property="orderNo" column="ORDER_NO"/>
		<result property="orderDate" column="ORDER_DATE"/>
		<result property="prdNo" column="PRODUCT_NO"/>
		<result property="image" column="IMAGE"/>
	</resultMap>
	


	<!-- 게시글 등록 -->
	<insert id="insertReview" parameterType="Review"
		useGeneratedKeys="true" keyProperty="reviewNo" keyColumn="REVIEW_NO">
		INSERT INTO REVIEW (
			REVIEW_NO,
			RATED,
			NAME,
			CONTENT,
			RGSTR_DATE,
			USER_NO,
			ORIGINAL_FILENAME,
			RENAMED_FILENAME,
			PRD_NO
		) VALUES(
			SEQ_REVIEW_NO.NEXTVAL,
			#{rated},
			#{name},
			#{content},
            SYSDATE,
			#{userNo},
			#{originalFilename},
			#{renamedFilename},
			#{prdNo}
		)
	</insert>
	
	
	<!-- 게시글 목록 조회(회원 번호에 따라서) -->
	<select id="getReviewCountByuserNo" resultType="_int" parameterType="_int">
		SELECT COUNT(*) 
		FROM REVIEW 
		WHERE STATUS='Y' AND USER_NO = #{userNo}
	</select>
	
	<select id="getOrderListCountByUserNo" resultType="_int" parameterType="_int">
		SELECT COUNT(*) 
		FROM ORDERS 
		WHERE MEMBER_NO = #{userNo}
	</select>
	
	<!-- 게시글 목록 조회(전체 목록) -->
	<select id="getReviewCount" resultType="_int">
		SELECT COUNT(*) 
		FROM REVIEW 
		WHERE STATUS='Y'
		<!-- 
		<if test="!(type.equals('') and text.equals(''))">
			<trim prefix="AND" prefixOverrides="AND|OR">
				<if test="!type.equals('')">
					<choose>
						<when test="type.equals('title')">
							NAME LIKE '%' || #{text} || '%'
						</when>
						<when test="type.equals('writerId')">
							
						</when>
					
					
					
					</choose>
				</if>
			</trim>
		</if>
		 -->
	</select>
	
	<!-- Admin 게시글 목록 조회(전체 목록) -->
	<select id="getAdminReviewCount" resultType="_int">
		SELECT COUNT(*) 
		FROM REVIEW 
	</select>
	
	<!-- Admin slectAll -->
	<select id="adminSelectAll" resultMap="reviewListResultMap">
		SELECT	REVIEW.REVIEW_NO,
				REVIEW.RATED,
				REVIEW.NAME,
				REVIEW.CONTENT,
				REVIEW.IMAGE,
				REVIEW.RGSTR_DATE,
				REVIEW.VIEWS,
				REVIEW.STATUS,
				REVIEW.USER_NO,
				REVIEW.PRD_NO,
                MEMBER.ID
        FROM REVIEW
		LEFT JOIN MEMBER ON REVIEW.USER_NO = MEMBER.MEMBER_NO
		ORDER BY REVIEW_NO DESC
	</select>

	<select id="selectAll" resultMap="reviewListResultMap">
		SELECT	REVIEW.REVIEW_NO,
				REVIEW.RATED,
				REVIEW.NAME,
				REVIEW.CONTENT,
				REVIEW.IMAGE,
				REVIEW.RGSTR_DATE,
				REVIEW.VIEWS,
				REVIEW.STATUS,
				REVIEW.USER_NO,
				REVIEW.PRD_NO,
                MEMBER.ID,
                PRODUCT.NAME AS "PRODUCT_NAME",
                PRODUCT.IMAGE AS "PRODUCT_IMAGE"
        FROM REVIEW
		LEFT JOIN MEMBER ON REVIEW.USER_NO = MEMBER.MEMBER_NO
        LEFT JOIN PRODUCT ON REVIEW.PRD_NO = PRODUCT.PRD_NO
		ORDER BY REVIEW_NO DESC
	</select>
	
	<select id="selectAdAll" resultMap="reviewListResultMap">
		SELECT	REVIEW.REVIEW_NO,
				REVIEW.RATED,
				REVIEW.NAME,
				REVIEW.CONTENT,
				REVIEW.IMAGE,
				REVIEW.RGSTR_DATE,
				REVIEW.VIEWS,
				REVIEW.STATUS,
				REVIEW.USER_NO,
				REVIEW.PRD_NO,
                MEMBER.ID
        FROM REVIEW
		LEFT JOIN MEMBER ON REVIEW.USER_NO = MEMBER.MEMBER_NO
		ORDER BY REVIEW_NO DESC
	</select>
	
	<select id="selectAllByuserNo" resultMap="reviewListResultMap" parameterType="_int">
		SELECT	REVIEW.REVIEW_NO, 
				REVIEW.RATED,
				REVIEW.NAME,
				REVIEW.CONTENT,
				REVIEW.IMAGE,
				REVIEW.ORIGINAL_FILENAME,
				REVIEW.RENAMED_FILENAME,
				REVIEW.RGSTR_DATE,
				REVIEW.VIEWS,
				REVIEW.STATUS,
				REVIEW.USER_NO,
				PRODUCT.NAME as "PRODUCT_NAME"
        FROM REVIEW
		LEFT JOIN PRODUCT ON REVIEW.PRD_NO = PRODUCT.PRD_NO
		WHERE REVIEW.STATUS = 'Y' AND REVIEW.USER_NO = #{userNo}
        ORDER BY REVIEW.REVIEW_NO DESC
	</select>
	
	<select id="getOrderListByUserNo" resultMap="orderListResultMap" parameterType="_int">
	SELECT  MEMBER.MEMBER_NO AS "MEMBER_NO",
	        MEMBER.ID AS "MEMBER_ID",
	        PRODUCT.NAME AS "PRODUCT_NAME",
	        ORDERS.ORDER_NO AS "ORDER_NO",
	        ORDERS.ORDER_DATE AS "ORDER_DATE",
	        order_product.prd_no AS "PRODUCT_NO",
	        PRODUCT.IMAGE AS IMAGE
	FROM MEMBER
	LEFT JOIN ORDERS ON MEMBER.MEMBER_NO = ORDERS.MEMBER_NO
	LEFT JOIN ORDER_PRODUCT ON ORDER_PRODUCT.ORDER_NO = ORDERS.ORDER_NO
	LEFT JOIN PRODUCT ON order_product.prd_no = PRODUCT.PRD_NO
	WHERE MEMBER.MEMBER_NO = #{userNo}
	ORDER BY ORDER_DATE DESC
	</select>

	<!-- 리뷰 상세 보기 -->
	<select id="selectReviewByNo" parameterType="_int"
		resultMap="reviewListResultMap">
		SELECT	REVIEW.REVIEW_NO AS REVIEW_NO,
				REVIEW.RATED AS RATED,
				REVIEW.NAME AS NAME,
				REVIEW.CONTENT AS CONTENT,
				REVIEW.IMAGE AS IMAGE,
				REVIEW.ORIGINAL_FILENAME,
				REVIEW.RENAMED_FILENAME,
				REVIEW.RGSTR_DATE AS RGSTR_DATE,
				REVIEW.VIEWS AS VIEWS,
				REVIEW.STATUS AS STATUS,
				REVIEW.USER_NO AS USER_NO,
				REVIEW.PRD_NO AS PRD_NO,
	            MEMBER.ID AS ID,
                PRODUCT.NAME AS "PRODUCT_NAME",
                product.image as "PRODUCT_IMAGE"
	    FROM REVIEW
        LEFT JOIN MEMBER ON REVIEW.USER_NO = MEMBER.MEMBER_NO
        LEFT JOIN product ON REVIEW.PRD_NO = PRODUCT.PRD_NO
        WHERE REVIEW.REVIEW_NO = #{reviewNo}
	</select>

	<!-- 게시글 삭제 -->
	<update id="delete" parameterType="map">
		UPDATE REVIEW
		SET
			STATUS = #{rstatus}  
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<update id="updateReview" parameterType="Review">
		UPDATE REVIEW
		SET
			RATED = #{rated},
			NAME = #{name},
			CONTENT = #{content},
			IMAGE = #{image},
			RGSTR_DATE = SYSDATE,
			ORIGINAL_FILENAME = #{originalFilename},
			RENAMED_FILENAME = #{renamedFilename}
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<update id="updateReviewNoImgChage" parameterType="Review">
		UPDATE REVIEW
		SET
			RATED = #{rated},
			NAME = #{name},
			CONTENT = #{content},
			RGSTR_DATE = SYSDATE
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<update id="updateStatus">
    UPDATE review
    SET status = N
    WHERE review_no IN
    <foreach collection="checkedReviewNoList" item="reviewNo" open="(" separator="," close=")">
      #{reviewNo}
    </foreach>
	</update>
	
	<update id="updateAdReview" parameterType="Review">
		UPDATE REVIEW
			SET STATUS = #{rstatus}
		WHERE REVIEW_NO = #{reviewNo}
	</update>

	<select id="getReviewListForHome" resultMap="reviewListResultMap">
		SELECT	ROWNUM,
				REVIEW_NO,
				RATED,NAME,
				CONTENT,IMAGE,
				RGSTR_DATE,
				VIEWS,
				STATUS,
				USER_NO,
				PRD_NO,
				ID
        FROM (
		SELECT	REVIEW.REVIEW_NO AS REVIEW_NO,
				REVIEW.RATED AS RATED,
				REVIEW.NAME AS NAME,
				REVIEW.CONTENT AS CONTENT,
				REVIEW.IMAGE AS IMAGE,
				REVIEW.RGSTR_DATE AS RGSTR_DATE,
				REVIEW.VIEWS AS VIEWS,
				REVIEW.STATUS AS STATUS,
				REVIEW.USER_NO AS USER_NO,
				REVIEW.PRD_NO AS PRD_NO,
                MEMBER.ID AS ID
            FROM REVIEW
            LEFT JOIN MEMBER ON REVIEW.USER_NO = MEMBER.MEMBER_NO
			ORDER BY REVIEW_NO DESC
		)
		WHERE ROWNUM BETWEEN 1 AND 9
	</select>

	<update id="updateStatusAdmin" parameterType="map">
		UPDATE REVIEW
		SET
			STATUS = #{rstatus}  
		WHERE REVIEW_NO = #{reviewNo}
	</update>

<select id="getOrderInfo" resultMap="orderListResultMap" parameterType="_int">
	SELECT  MEMBER.MEMBER_NO AS "MEMBER_NO",
	        MEMBER.ID AS "MEMBER_ID",
	        PRODUCT.NAME AS "PRODUCT_NAME",
	        ORDERS.ORDER_NO AS "ORDER_NO",
	        ORDERS.ORDER_DATE AS "ORDER_DATE",
	        order_product.prd_no AS "PRODUCT_NO",
	        PRODUCT.IMAGE AS IMAGE
	FROM MEMBER
	LEFT JOIN ORDERS ON MEMBER.MEMBER_NO = ORDERS.MEMBER_NO
	LEFT JOIN ORDER_PRODUCT ON ORDER_PRODUCT.ORDER_NO = ORDERS.ORDER_NO
	LEFT JOIN PRODUCT ON order_product.prd_no = PRODUCT.PRD_NO
	WHERE ORDERS.ORDER_NO = #{orderNo}
	</select>

	

</mapper>	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	