<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
	


<mapper namespace="com.mealchelin.mvc.member.model.mapper.MemberMapper">
	<sql id="selectMemberSql">
			SELECT MEMBER_NO,
			       ID,
			       PASSWORD,
			       NAME,
			       PHONE,
			       EMAIL,
			       POSTAL_CODE,
			       ADDRESS,
			       ADDRESS_DETAIL,
			       BIRTH,
			       ENROLL_DATE,
			       ROLE,
			       STATUS
			FROM MEMBER
	</sql>
	<resultMap id="memberResultMap" type="Member">
		<id property="memberNo" column="MEMBER_NO" />
		
		<result property="id" column="ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="postalCode" column="POSTAL_CODE"/>
		<result property="address" column="ADDRESS"/>
		<result property="addressDetail" column="ADDRESS_DETAIL"/>
		<result property="birth" column="BIRTH"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="role" column="ROLE"/>
		<result property="memStatus" column="STATUS"/>
	</resultMap>
	
	<!-- 회원 수 구하기 -->
	<select id="selectCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
	</select>
	
	<!-- 모든 회원 조회 -->
	<select id="selectAll" resultMap="memberResultMap">
		<include refid="selectMemberSql"/>
	</select>
	
	
	<select id="selectMemberById" parameterType="String" resultMap="memberResultMap">
		<include refid="selectMemberSql"/>
		WHERE STATUS = 'Y' AND ID = #{id}
	</select>
	

	<!-- 멤버 주문 정보 ? -->
	<select id="selectMemberByOrderInfo" resultMap="memberResultMap" parameterType="String">

	SELECT MEMBER_NO,
			      NAME,
			      PHONE,
			      EMAIL
			FROM MEMBER
			WHERE STATUS = 'Y' AND ID = #{id}

	</select>
	
	<!-- 멤버 회원 가입 -->
	<insert id="insertMember" parameterType="member"
		useGeneratedKeys="true" keyColumn="MEMBER_NO" keyProperty="memberNo" >
		INSERT INTO MEMBER (
				MEMBER_NO,
				ID,
				PASSWORD,
				NAME,
				PHONE,
				EMAIL,
				POSTAL_CODE,
				ADDRESS,
				ADDRESS_DETAIL,
				BIRTH
		) VALUES (
		SEQ_MEMBER_NO.NEXTVAL,
		#{id},
		#{password},
		#{name},
		#{phone},
		#{email},
		#{postalCode},
		#{address},
		#{addressDetail},
		#{birth}
		)

	</insert>
	
	
	<!-- 멤버 정보 수정 -->
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER
		SET 
			NAME = #{name},
			PASSWORD = #{password},
			PHONE = #{phone},
			EMAIL = #{email},
			POSTAL_CODE = #{postalCode},
			ADDRESS = #{address},
			ADDRESS_DETAIL = #{addressDetail},
			BIRTH = #{birth}
		WHERE MEMBER_NO = #{memberNo}	
	</update>
	
	
	<!-- 멤버 삭제 (상태 전환) -->
	<update id="updateStatus" parameterType="map">
		UPDATE MEMBER
		SET
			STATUS = #{memStatus}
		WHERE 
			MEMBER_NO = #{memberNo}
	</update>
	
	
	<!--  카카오 조회 해오기 !  -->
	<select id="findKakao" parameterType="Member" resultMap="memberResultMap">
		<include refid="selectMemberSql"/>
		WHERE STATUS = 'Y'
		AND ID = #{id}
		AND NAME = #{name}
		AND EMAIL = #{email}
	</select>

	<!-- 카카오 회원가입 -->
	<insert id="kakaoInsert" >
		INSERT INTO MEMBER (
			MEMBER_NO,
			ID,
			PASSWORD,
			NAME,
			EMAIL,
			PHONE
		) VALUES (
		SEQ_MEMBER_NO.NEXTVAL,
		#{id},
		#{password},
		#{name},
		#{email},
		#{phone_number}
		)
	</insert>
</mapper>
